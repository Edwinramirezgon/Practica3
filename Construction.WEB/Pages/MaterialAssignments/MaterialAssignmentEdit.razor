@page "/MaterialAssignments/edit/{MaterialAssignmentId:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h3>Editar Asignacion De Material</h3>

@if (materialAssignment is null)
{
    <p>La Asignacion de Material es Nula</p>
}
else
{
    <MaterialAssignmentForm MaterialAssignment="materialAssignment" OnValidSubmit="Editar" ReturnAction="Return" />
    
}

@code {
    [Parameter] 
    public int MaterialAssignmentId { get; set; }
    private MaterialAssignment materialAssignment = new();

    protected override async Task OnInitializedAsync()
    {

        var responseHTTP = await repository.GetAsync<MaterialAssignment>($"api/MaterialAssignments/{MaterialAssignmentId}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("MaterialAssignments");
                return;
            }
            else
            {
                var mensajeError = await responseHTTP.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
                return;
            }
        }
        else
        {
            materialAssignment = responseHTTP.Response;
        }
    }

    private async Task Editar()
    {

        var responseHTTP = await repository.PutAsync("api/MaterialAssignments", materialAssignment);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
      
      {  Return();

        var Toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000

            });

        await Toast.FireAsync(icon: SweetAlertIcon.Success, message: "Asignacion de Material modificada con exito");}

    }


    private void Return()
    {
 
        navigationManager.NavigateTo("MaterialAssignments");
    }
}