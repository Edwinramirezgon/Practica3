@* Home of budget *@
@page "/budgets"
@using Construction.Shared.Entities
@using Construction.WEB.Repositories
@using Construction.WEB.Shared
@inject IRepository Repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager


@* Title *@
<h3><i class="bi bi-cash" /> Presupuestos</h3>
<div class="card">
    <div class="card-header">
        <span>
            @* button to call create class *@
            <a class="btn btn-primary btn-sm float-start" href="/budgets/create"><i class="bi bi-plus-circle" /> Nuevo Presupuesto</a>

        </span>
    </div>

    <div class="card-body">

                <GenericList MyList="Budgets">

            <Body>
                <table class="table table-striped">
                    <thead>
                        <tr>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                          
                            @* Titles of the fields *@
                            <td>
                                <b>ID</b>
                            </td>
                            <td>
                                <b>Equipo de Contruccion</b>
                            </td>
                            <td>
                                <b>Tareas</b>
                            </td>
                            <td>
                                <b>Maquinaria</b>
                            </td>
                            <td>
                                <b>Proyecto de Construccion</b>
                            </td>
                            <td>
                                <b>Total</b>
                            </td>
                            <td>
                                <b>Comentarios</b>
                            </td>
                            <td>
                                <b>Proyecto de Construccion</b>
                            </td>

                            <td>
                                <b>Acciones</b>
                            </td>

                        </tr>
                        @* Atributes of the entities to show *@
                        @foreach (var budget in Budgets!)
                        {
                            Proyectname(@budget.ProjectConstructionsId);

                            <tr>
                                <td>
                                    @budget.Id
                                </td>
                                <td>
                                    @budget.BudgetConstructionTeam
                                </td>
                                <td>
                                    @budget.BudgetDutie
                                </td>
                                <td>
                                    @budget.BudgetEquipment
                                </td>
                                <td>
                                    @budget.BudgetProyectConstruction
                                </td>
                                <td>
                                    @budget.BudgetTotal
                                </td>
                                <td>
                                    @budget.Remarks
                                </td>
                                <td>
                                    
                                    @proyectname
                                </td>

                                <td>
                                    @* Button to call edit class *@
                                    <a href="/budgets/edit/@budget.Id" class="btn btn-warning">Editar <i class="bi bi-pencil-square"></i></a>
                                    @* Button to call delete method *@
                                    <button class="btn btn-danger" @onclick=@(() => Delete(budget))>Borrar <i class="bi bi-trash3"></i></button>
                                </td>

                            </tr>
                        }
                        

                    </tbody>
                </table>

            </Body>

        </GenericList>
    </div>
</div>



@code {

    public string proyectname { get; set; }

    public List<Budget> Budgets { get; set; }

    public List<ProjectConstruction> ProjectConstructions { get; set; }


    protected async override Task OnInitializedAsync()
    {
        await Charging();
    }


    // method to create the list
    private async Task Charging()
    {
        var responseHTTP = await Repository.GetAsync<List<Budget>>("/api/budgets");
        Budgets = responseHTTP.Response!;
    
        var response2HTTP = await Repository.GetAsync<List<ProjectConstruction>>("/api/ProjectConstructions");
        ProjectConstructions = response2HTTP.Response!;


    }

    // method to delete by id
    private async Task Delete(Budget budget)
    {
        //confirmation pop up 
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = $"¿Realmente deseas eliminar el presupuesto: {budget.Id}?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
            });

        var confirm = string.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }

        var responseHTTP = await Repository.DeleteAsync($"/api/budgets/{budget.Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {//if nof tound navigate to home
                navigationManager.NavigateTo("/budgets");
            }
            else
            {//if encountered any error the pop up whit the error message show
                var mensajeError = await responseHTTP.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            //if the delete its sucessful the pop up whit the message show
            await Charging();

            var toast = sweetAlertService.Mixin(new SweetAlertOptions
                {
                    Toast = true,
                    ShowConfirmButton = true,
                    Timer = 3000,
                    Position = SweetAlertPosition.BottomEnd
                });
            toast.FireAsync(icon: SweetAlertIcon.Success, message: "Presupuesto borrado con éxito.");
        }
    }


    private void Proyectname(int? selection)

    {
        proyectname = "";
        foreach (var projectconstruction in ProjectConstructions!)
        { 
            if (selection == projectconstruction.Id)
            {
                proyectname = projectconstruction.Name;
            }

        }
    }


}