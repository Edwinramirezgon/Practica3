@page "/budgets/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>Creacion De Presupuesto</h3>

<BudgetForm @ref="budgetForm" Budget="budget" OnValidSubmit="Create" ReturnAction="Return" />


@code {
    private Budget budget = new();
    private BudgetForm budgetForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/budgets", budget);

        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
        }       
        Return();        


    }

    private async Task Toast()
    {


        var Toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000

            });

        await Toast.FireAsync(icon: SweetAlertIcon.Success, message: "Presupuesto creado con exito");
    }


    private void Return()
    {
        budgetForm.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/budgets");

        Toast();


    }

}
