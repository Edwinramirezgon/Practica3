@page "/projectconstructions/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>Creacion de Proyecto de Construccion</h3>

<ProjectConstructionForm  ProjectConstruction="projectConstruction" OnValidSubmit="Create" ReturnAction="Return" />


@code {
    private ProjectConstruction projectConstruction = new();

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/ProjectConstructions", projectConstruction);

        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
        }
        else
        Return();
{        var Toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000

            });

        await Toast.FireAsync(icon: SweetAlertIcon.Success, message: "Proyecto de Construccion creado con exito");}


    }

    


    private void Return()
    {
        navigationManager.NavigateTo("/ProjectConstructions");




    }

}
